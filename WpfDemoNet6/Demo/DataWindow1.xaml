
<!--
    d:DataContext="{d:DesignInstance local:DataViewModel1,
    IsDesignTimeCreatable=True}"
-->

<Window x:Class="WpfDemoNet6.Demo.DataWindow1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:WpfDemoNet6.Demo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="最基本的使用"
        Width="800"
        Height="450"
        d:DataContext="{d:DesignInstance local:DataViewModel1,
                                         IsDesignTimeCreatable=True}"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d">
    <!--<Window.Resources>
        <local:DataViewModel1 ></local:DataViewModel1>
    </Window.Resources>-->
    <!--  引用，并起一个名字  -->
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="myboolconvert" />
    </Window.Resources>
    <Grid ShowGridLines="True">

        <!--  2行1列的表格  -->
        <Grid.RowDefinitions>
            <RowDefinition />

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0"
                    Grid.Column="0">
            <TextBox x:Name="txt1"
                     Width="190"
                     Height="30"
                     Text="{Binding Title}" />
            <CheckBox Width="190"
                      Content="是可用"
                      IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
            <Button Width="100"
                    Height="30"
                    Command="{Binding ButtonClickCommand}"
                    Content="改变值" />
            <!--  把第一个文本框的宽度值当作参数传递  -->
            <Button Width="100"
                    Height="30"
                    Command="{Binding ButtonClickCommandPar}"
                    CommandParameter="{Binding ElementName=txt1, Path=Width}"
                    Content="改变值(带参数)" />

            <!--  
            特别说明：异步命令会自动控制控件的可见性,并且提供一个IsRunning属性可以判断异步是否完成  
            -->
            <Button Width="100"
                    Height="30"
                    Command="{Binding AsyncButtonClickCommand}"
                    Content="异步" />
            <TextBlock HorizontalAlignment="Center"
                       FontSize="20"
                       FontStyle="Italic"
                       FontWeight="Bold"
                       Foreground="Green"
                       Text="loading......"
                       Visibility="{Binding AsyncButtonClickCommand.IsRunning, Converter={StaticResource myboolconvert}}" />

        </StackPanel>

    </Grid>
</Window>

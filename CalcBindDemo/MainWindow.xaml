<Window x:Class="CalcBindDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:CalcBindDemo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
        Title="主窗体"
        Width="800"
        Height="450"
        d:DataContext="{d:DesignInstance local:MainViewModel,
                                         IsDesignTimeCreatable=True}"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d">
    <Grid>
        <StackPanel>

            <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{c:Binding A+B+C}" />

            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding A-B-C}" />
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding A*(B+C)}" />
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding 2*A-B*0.5}" />

            <!--  计算结果,格式化  -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding A*B,
                                      StringFormat={}{0:n2} --StringFormat is used}" />

            <!--
                a等于10,就显示10,否则20
                注意:3元运算符,?和:前后都要有空格,否则会报错
            -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding '(A == 10) ? 10 : 20'}" />

            <!--
                a大于10,就A*10,否则B + 1
            -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding '(A > 10) ? A*10 : B + 1'}" />

            <!--  布尔值反向  -->
            <CheckBox HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Content="IsChecked布尔值反向"
                      IsChecked="{c:Binding !IsChecked}" />

            <!--
                变量Name + ' ' + 变量Last
            -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding (Name + \'  \' + Last)}" />

            <!--
                3元运算符,满足条件:变量Name + 变量Last 否则:变量Title
            -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding (!IsChecked) ? Name + Last  : Title}" />


            <!--
                3元运算符,满足条件:字符串Mr 否则字符串Ms + 空格 +  变量Name + 空格 + 变量Last
            -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding (IsChecked ? \'Mr\':\'Ms\') + \' \' + Name + \' \' + Last}" />

            <!--
                3元运算符,满足条件:字符串my: 否则字符串she: + 变量Name
            -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding ((IsChecked and IsFull) ? \'my:\' : \'she:\') + Name}" />


            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding '!IsChecked or (A > B)'}" />

            <!--  less=  就是小于等于  -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding '(A > 1) and (B less= 5)'}" />

            <!--  || 就是or  -->
            <TextBox HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Text="{c:Binding (IsChecked || !IsFull)}" />

            <!--
                上面引入了命名空间
                xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
            -->
            <Button Width="100"
                    Background="{c:Binding 'IsChecked ? media:Brushes.Green : media:Brushes.Red'}"
                    Content="变色按钮" />

            <!--  利用枚举类型判断  -->
            <Button Width="100"
                    Background="{c:Binding 'PlayType==local:DisplayType.All ? media:Brushes.Green : media:Brushes.Red'}"
                    Content="变色按钮" />

            <!--
                自动布尔转换Visibility
                
                FalseToVisibility就是告知,false时是用Collapsed,还是Hidden
            -->
            <Button Width="100"
                    Content="TargetButton1"
                    Visibility="{c:Binding IsChecked,
                                           FalseToVisibility=Collapsed}" />

            <Button Width="100"
                    Content="TargetButton2"
                    Visibility="{c:Binding !IsChecked,
                                           FalseToVisibility=Hidden}" />

            <Button Width="100"
                    Height="30"
                    Command="{Binding ButtonClickCommand}"
                    Content="改变值" />
        </StackPanel>
    </Grid>
</Window>

<Window x:Class="PrismDemo.DataDemo.View.ModelData"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:PrismDemo.DataDemo.View"
        xmlns:localcon="clr-namespace:PrismDemo.DataDemo.convert"
        xmlns:localvm="clr-namespace:PrismDemo.DataDemo.VM"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        Title="ModelData"
        Width="800"
        Height="450"
        d:DataContext="{d:DesignInstance localvm:ModelDataVM,
                                         IsDesignTimeCreatable=True}"
        prism:ViewModelLocator.AutoWireViewModel="False"
        WindowStartupLocation="CenterScreen"
        WindowStyle="ToolWindow"
        mc:Ignorable="d">
    <!--
        prism:ViewModelLocator.AutoWireViewModel="True"
    -->
    <!--  引用，并起一个名字  -->
    <Window.Resources>
        <localcon:BooleanToVisibilityConverter x:Key="myboolconvert" />
    </Window.Resources>
    <Grid>
        <!--  2行1列的表格  -->
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0"
                    Grid.Column="0">
            <TextBox x:Name="txt1"
                     Width="190"
                     Height="30"
                     Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" />
            <TextBox Width="190"
                     Height="30"
                     Text="{Binding Names, UpdateSourceTrigger=PropertyChanged}" />
            <!--  Caption是只读的属性,所以Mode=OneWay  -->
            <TextBlock Width="190"
                       Height="30"
                       Text="{Binding Caption, Mode=OneWay}" />
            <CheckBox Width="190"
                      Content="是可用"
                      IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
            <Button Width="100"
                    Height="30"
                    Command="{Binding ButtonClickCommand}"
                    Content="改变值" />
            <Button Width="100"
                    Height="30"
                    Command="{Binding ButtonClickCommandTwo}"
                    Content="改变值" />
            <!--  把第一个文本框的宽度值当作参数传递  -->
            <Button Width="100"
                    Height="30"
                    Command="{Binding ButtonClickParCommand}"
                    CommandParameter="{Binding ElementName=txt1, Path=Width}"
                    Content="改变值(带参数)" />

            <Button Width="100"
                    Height="30"
                    Command="{Binding AsyncButtonClickCommand}"
                    Content="异步" />
            <TextBlock HorizontalAlignment="Center"
                       FontSize="20"
                       FontStyle="Italic"
                       FontWeight="Bold"
                       Foreground="Green"
                       Text="loading......"
                       Visibility="{Binding Path=IsLoadData, Converter={StaticResource myboolconvert}}" />
            <Button Width="100"
                    Height="30"
                    Command="{Binding AsyncButtonParClickCommand}"
                    CommandParameter="{Binding ElementName=txt1, Path=Width}"
                    Content="异步(带参数)" />
            <!--  下面做一个简单的进度显示  -->
            <TextBlock HorizontalAlignment="Center"
                       FontSize="20"
                       FontStyle="Italic"
                       FontWeight="Bold"
                       Foreground="Green"
                       Text="loading......"
                       Visibility="{Binding Path=IsLoadParData, Converter={StaticResource myboolconvert}}" />

        </StackPanel>
    </Grid>
</Window>
